# KevScript grammar

# Rules
# =====
KevScript   <- +(Statement ws)

Statement   <- (Add | Remove | Move | Attach | Detach | Set | AddBinding | DelBinding | Include | Network | AddRepo | Comment) ws

Add         <- AddToken ws NameList ws :':' ws TypeDefStmt                              # add group0, group1 : WebSocketGroup
             | AddToken ws CompList ws :':' ws TypeDefStmt                              # add comp0@node0, comp1@node1 : FakeConsole

Remove      <- RemoveToken ws MixedList                                                 # remove node0
                                                                                        # remove comp0@node0, comp1@node1
                                                                                        # remove node0, comp1@node0, group1

Move        <- MoveToken ws CompList ws String                                          # move comp0, comp1 node1
             | MoveToken ws '*' ?(:'@' String) ws String                                # move * node0
                                                                                        # move *@node2 node1

Attach      <- AttachToken ws NameList ws String                                        # attach node0, node1 group0
             | AttachToken ws '*' ws String                                             # attach * group2

Detach      <- DetachToken ws NameList ws String                                        # detach node0, node1 group0
             | DetachToken ws '*' ws String                                             # detach * group42

Set         <- SetToken ws (String | CompStmt) ws Dictionary                            # set comp0 Dictionary

Network     <- NetworkToken ws String ws String2                                        # network node1 192.168.0.1

Dictionary  <- AttrList                                                                 # { att = "foo"}
             | AttrList ws *(:[,] ws AttrList)                                          # {foo='bar'}, {port="8080"}@node0

AttrList    <- :'{' ws Attribute ws *(:[,] ws Attribute) ws :'}' ?(:'@' String)         # { Attribute, Attribute, Attribute }

Attribute   <- String ws :'=' ws :['] ws String2 ws :[']                                # myAttr = 'foo'
             | String ws :'=' ws :["] ws String2 ws :["]                                # myOtherAttr = "bar"

AddBinding  <- BindToken ws CompStmt :'.' String ws NameList                            # bind comp0@node1.sendMsg chan42

DelBinding  <- UnbindToken ws CompStmt :'.' String ws NameList                          # unbind comp0@node1.sendMsg chan0, chan1
             | UnbindToken ws CompStmt :'.' String ws '*'                               # unbind comp0@node1.sendMsg *

AddRepo     <- RepoToken ws Anything                                                    # repo org.sonatype.org/foo/bar?a=b&c=d

Include     <- IncludeToken ws String :':' Anything                                     # include npm:kevoree-chan-websocket
                                                                                        # include mvn:org.kevoree.library.javase:websocketgrp:2.0.5-SNAPSHOT

NameList    <- String ws *(:[,] ws String)                                              # node42
                                                                                        # node0, node42

CompStmt    <- String :'@' String                                                       # comp0@node1

CompList    <- CompStmt ws *(:[,] ws CompStmt)                                          # comp42@node0
                                                                                        # comp1@node0, comp0@node1
MixedList   <- (CompStmt | String) ws *(:[,] ws (CompStmt | String))

TypeDefStmt <- String ?(:'/' +(String|[.]))                                             # FooType/0.0.1 (specific vers.)
                                                                                        # FooType       (last vers.)

String      <- +[a-zA-Z0-9_-]

String2     <- +[a-zA-Z0-9.:@_-]

Anything    <- +(!eol .) :eol
# =========
# End Rules


# Void Non-terminals
# =============
RepoToken       <: 'repo'
IncludeToken    <: 'include'
AddToken        <: 'add'
RemoveToken     <: 'remove'
MoveToken       <: 'move'
SetToken        <: 'set'
AttachToken     <: 'attach'
DetachToken     <: 'detach'
NetworkToken    <: 'network'
BindToken       <: 'bind'
UnbindToken     <: 'unbind'
Comment         <: '//' Anything
eol             <: '\r\n' | '\n' | '\r'
ws              <: *([ \t] | eol)
# =================
# End Void Non-terminals