/**
 * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 3, 29 June 2007;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 3, 29 June 2007;
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
//package org.kevoree.tools.war.wrapperplugin
//
///**
// * Licensed under the GNU LESSER GENERAL PUBLIC LICENSE, Version 3, 29 June 2007;
// * you may not use this file except in compliance with the License.
// * You may obtain a copy of the License at
// *
// * 	http://www.gnu.org/licenses/lgpl-3.0.txt
// *
// * Unless required by applicable law or agreed to in writing, software
// * distributed under the License is distributed on an "AS IS" BASIS,
// * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// * See the License for the specific language governing permissions and
// * limitations under the License.
// */
//
//import java.io.{FileWriter, File}
//import org.apache.maven.project.MavenProject
//
//
///**
// * Created by IntelliJ IDEA.
// * User: duke
// * Date: 18/12/11
// * Time: 20:00
// * To change this template use File | Settings | File Templates.
// */
//
//object WrapperGenerator_dep {
//
//  def generate(targetDir: File, project: MavenProject) {
//
//    var name = project.getArtifactId
//    if (name.contains(".")) {
//      name = name.substring(name.lastIndexOf(".") + 1)
//    }
//    val wrapperFile = new File(targetDir.getAbsolutePath + File.separator + project.getGroupId.replace(".", File.separator) + File.separator + project.getArtifactId.replace(".", File.separator) + File.separator + name + ".java")
//    ZipHelper.createParentDirs(wrapperFile)
//
//    val fw = new FileWriter(wrapperFile)
//    fw.append("//Generated by Kevoree WebServer War Wrapper\n")
//    fw.append("package " + project.getGroupId + "." + project.getArtifactId + ";\n")
//    fw.append("import org.kevoree.library.javase.webserver.*;\n")
//    fw.append("import org.kevoree.library.javase.webserver.servlet.LocalServletRegistry;\n")
//    fw.append("import org.osgi.framework.Bundle;\n")
//
//    fw.append("@org.kevoree.annotation.ComponentType\n")
//    fw.append("public class " + name + " extends  org.kevoree.library.javase.webserver.AbstractPage {\n")
//
//    fw.append("private org.kevoree.library.javase.webserver.servlet.LocalServletRegistry servletRepository = null;\n")
//
//
//    fw.append("Thread serverThread = null;\n")
//    fw.append("org.eclipse.jetty.server.Server server=null;\n")
//
//    fw.append("@Override\n")
//    fw.append("public void startPage() {\n")
//    fw.append("super.startPage();\n")
//    fw.append("final Bundle b = (Bundle)this.getDictionary().get(\"osgi.bundle\");")
//    fw.append("servletRepository = new LocalServletRegistry(b);\n");
//
//
//    /*
//    fw.append("servletRepository.loadWebXml(this.getClass().getClassLoader().getResourceAsStream(\"web.xml\"));\n")
//    */
//
//    fw.append("server = new org.eclipse.jetty.server.Server(7080);\n")
//    fw.append(" serverThread = new Thread() {\n")
//    fw.append("  @Override\n")
//    fw.append("  public void run() {\n")
//
//    fw.append("org.eclipse.jetty.webapp.WebAppContext context = new org.eclipse.jetty.webapp.WebAppContext(){\n    @Override\n    public boolean isCopyWebDir() {return false;    }\n\n    @Override\n    public boolean isCopyWebInf() {return false;}\n};\n")
//    fw.append("try{\n")
//
//    fw.append(" java.io.File jarFile = org.kevoree.framework.FileNIOHelper.resolveBundleJar(b, new java.io.File(System.getProperty(\"osgi.cache\")));\n")
//    fw.append(" java.io.File tempWar = java.io.File.createTempFile(\"-t-\", \"-t-\");\n")
//      fw.append(" tempWar.delete();\n")
//      fw.append(" tempWar.mkdirs();\n")
//      fw.append("  org.kevoree.framework.FileNIOHelper.unzipToTempDir(jarFile,tempWar,java.util.Arrays.asList(\".class\",\".jar\"));\n")
//
//
//    fw.append("org.eclipse.jetty.osgi.boot.internal.webapp.OSGiWebappClassLoader webappClassLoader = new org.eclipse.jetty.osgi.boot.internal.webapp.OSGiWebappClassLoader(org.eclipse.jetty.osgi.boot.JettyBootstrapActivator.class.getClassLoader(), context, (org.osgi.framework.Bundle)getDictionary().get(\"osgi.bundle\"), new org.eclipse.jetty.osgi.boot.utils.BundleClassLoaderHelper() {\n")
//    fw.append("    @Override\n")
//    fw.append("    public ClassLoader getBundleClassLoader( org.osgi.framework.Bundle bundle) {\n")
//    fw.append("        return "+name+".class.getClassLoader();\n")
//    fw.append("    }\n")
//    fw.append("});\n")
//    fw.append(" context.setClassLoader(webappClassLoader);\n")
//    fw.append("Thread.currentThread().setContextClassLoader(webappClassLoader);\n")
//    fw.append("context.setAttribute(org.eclipse.jetty.osgi.boot.OSGiWebappConstants.RFC66_OSGI_BUNDLE_CONTEXT, ((org.osgi.framework.Bundle)getDictionary().get(\"osgi.bundle\")).getBundleContext());\n")
//    fw.append(" webappClassLoader.setWebappContext(context);\n")
//
//
//
//
//
//    //fw.append("org.eclipse.jetty.server.handler.ResourceHandler resourceHandler = new org.eclipse.jetty.server.handler.ResourceHandler();\n")
//   //fw.append("resourceHandler.setBaseResource(org.eclipse.jetty.util.resource.Resource.newClassPathResource(\"/\"));\n")
//    //fw.append("context.setDescriptor(\"/Users/duke/Documents/dev/dukeboard/kevoree/kevoree-library/javase/org.kevoree.library.javase.webserver.jenkins/target/warcontent/web.xml\");")
//    fw.append("context.setContextPath(\"/\");\n")
//    //fw.append("context.setParentLoaderPriority(false);\n")
//
//
//
//fw.append("context.setExtractWAR(false);\n")
//    fw.append("context.setBaseResource(org.eclipse.jetty.util.resource.Resource.newResource(tempWar));\n")
//    fw.append("System.out.println(tempWar.getAbsolutePath());\n")
//
//
//  //  fw.append("context.setBaseResource(org.eclipse.jetty.util.resource.Resource.newClassPathResource(\"/\"));\n")
//    fw.append("org.eclipse.jetty.security.HashLoginService dummyLoginService = new org.eclipse.jetty.security.HashLoginService(\"KEVOREE-SECURITY-REALM\");\n")
//    fw.append("context.getSecurityHandler().setLoginService(dummyLoginService);\n")
//    fw.append("server.setHandler(context);\n")
//    fw.append(" server.start();server.join();\n")
//    fw.append("} catch (Exception e) {e.printStackTrace(); }\n")
//
//
//    fw.append("  }\n")
//    fw.append("};\n")
//    fw.append("serverThread.start();\n")
//
//    fw.append("}//END START METHOD\n")
//
//    fw.append("@Override\n")
//    fw.append("public void stopPage() {\n")
//    fw.append("    servletRepository.unload();\n")
//    fw.append("    super.stopPage();\n")
//    fw.append("    try {server.stop();server.destroy();serverThread.stop();\n    } catch (Exception e) {e.printStackTrace();  }\n")
//    fw.append(" }\n")
//
//    fw.append("@Override\n")
//    fw.append("public KevoreeHttpResponse process(KevoreeHttpRequest request, KevoreeHttpResponse response) {\n")
//
//    fw.append("if (servletRepository.tryURL(request.getUrl(), request, response)) {return response;}\n")
//    fw.append("if (FileServiceHelper.checkStaticFile(\"index.html\", this, request, response)) {return response;}\n")
//    fw.append("response.setContent(\"Bad request\");\n")
//    fw.append("return response;\n")
//
//    fw.append("}//END process METHOD\n")
//
//
//    fw.append("}\n")
//    fw.close()
//  }
//
//}